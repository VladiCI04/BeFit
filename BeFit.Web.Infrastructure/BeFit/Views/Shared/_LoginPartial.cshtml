@using BeFit.Data.Models;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@using BeFit.Services.Data.Interfaces
@using BeFit.Web.Infrastructure.Extensions;

@inject ICoachService CoachService
@{
    bool isUserCoach = await CoachService.CoachExistsByUserIdAsync(this.User.GetId()!);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (!isUserCoach)
    {
        <li>
            <a class="nav-link text-dark" asp-controller="Coach" asp-action="Become">Become Coach</a>
        </li>
    }
    <li>
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @User.Identity?.Name!</a>
    </li>
    <li>
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
    </li>
}
</ul>