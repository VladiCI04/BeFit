@model AllEventsQueryModel
@{
	ViewBag.Title = "All Events";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<form method="get">
	<div class="row">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="EventCategory"></label>
				<select asp-for="EventCategory" class="form-control">
					<option value="">All</option>
					@foreach (var category in Model.EventCategories)
					{
						<option value="@category">@category</option>
					}
				</select>
			</div>

			<div class="form-group">
				<label asp-for="EventsPerPage"></label>
				<select asp-for="EventsPerPage" class="form-control">
					<option value="3">3</option>
					<option value="6">6</option>
					<option value="9">9</option>
					<option value="12">12</option>
				</select>
			</div>
		</div>

		<div class="form-group col-md-3">
			<label asp-for="SearchString"></label>
			<input asp-for="SearchString" class="form-control" placeholder="...">
		</div>
		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="EventSorting"></label>
				<select asp-for="EventSorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Oldest</option>
					<option value="2">Tax (Ascending)</option>
					<option value="3">Tax (Descending)</option>
				</select>
			</div>
		</div>
		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>
@{
	int previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}
	int maxPage = (int)Math.Ceiling((double)Model.TotalEvents /
	Model.EventsPerPage);
}

@if (!Model.Events.Any())
{
	<h2 class="text-center">No events found by the given criteria!</h2>
}
else
{
	<div class="row">
		@foreach (var even in Model.Events)
		{
			<partial name="_EventPartial" model="@even" />
		}
	</div>
}

<div class="row mt-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :
string.Empty)"
		   asp-controller="Event"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-category="@Model.EventCategory"
		   asp-route-searchTerm="@Model.SearchString"
		   asp-route-sorting="@((int)Model.EventSorting)"><<</a>
	</div>
	@{
		bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Events.Any();
	}
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary
 @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Event"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-category="@Model.EventCategory"
		   asp-route-searchTerm="@Model.SearchString"
		   asp-route-sorting="@((int)Model.EventSorting)">>></a>
	</div>
</div>
